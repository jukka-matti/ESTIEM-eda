# Pre-commit hooks for ESTIEM EDA Toolkit
# Install with: pre-commit install

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--ignore-missing-imports, --follow-imports=silent]
        files: ^src/

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/]
        exclude: tests/

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(json|yml|yaml|md)$
        exclude: examples/manufacturing_data.csv

  - repo: local
    hooks:
      - id: pytest-check
        name: Run tests
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [tests/, --maxfail=1]

      - id: simple-test
        name: Run simple integration test
        entry: python
        language: system
        files: simple_test.py
        args: [simple_test.py]

      - id: check-version-consistency
        name: Check version consistency
        entry: python
        language: system
        pass_filenames: false
        always_run: false
        args: [-c, "
import sys;
sys.path.insert(0, 'src');
from estiem_eda import __version__ as pkg_version;
import re;
with open('setup.py') as f: 
    setup_content = f.read();
    setup_version = re.search(r'version=[\"\\']([^\"\\']+)[\"\\']', setup_content);
    if setup_version: setup_version = setup_version.group(1);
    else: setup_version = 'NOT FOUND';
print(f'Package version: {pkg_version}');
print(f'Setup.py version: {setup_version}');
assert pkg_version == setup_version, f'Version mismatch: {pkg_version} != {setup_version}'
"]

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: [--skip="*.csv,*.json", --ignore-words-list="estiem,te,nd"]

# Configuration for specific tools
default_language_version:
  python: python3.11

# Exclude files/directories
exclude: |
  (?x)^(
      \.git/|
      \.venv/|
      __pycache__/|
      \.pytest_cache/|
      build/|
      dist/|
      \.mypy_cache/|
      examples/manufacturing_data\.csv
  )$