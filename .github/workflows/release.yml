name: Release and Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel setuptools
    
    - name: Update version if manual trigger
      if: github.event_name == 'workflow_dispatch'
      run: |
        sed -i 's/version="[^"]*"/version="${{ github.event.inputs.version }}"/g' setup.py
        sed -i 's/__version__ = "[^"]*"/__version__ = "${{ github.event.inputs.version }}"/g' src/estiem_eda/__init__.py
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  test-package:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "from estiem_eda import __version__; print(f'Version: {__version__}')"
        python -c "from estiem_eda.mcp_server import ESTIEMMCPServer; server = ESTIEMMCPServer(); print(f'Tools: {len(server.tools)}')"

  publish-testpypi:
    needs: [build, test-package]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

  publish-pypi:
    needs: [build, test-package]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  update-documentation:
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Update installation instructions
      run: |
        echo "Package published to PyPI: https://pypi.org/project/estiem-eda-toolkit/"
        echo "Install with: pip install estiem-eda-toolkit"
    
    - name: Create release notes
      run: |
        echo "# Release ${{ github.event.release.tag_name }}" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## What's New" >> RELEASE_NOTES.md
        echo "- Statistical Process Control tools for Lean Six Sigma education" >> RELEASE_NOTES.md
        echo "- Interactive visualizations with ESTIEM branding" >> RELEASE_NOTES.md
        echo "- Claude Desktop MCP integration" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Installation" >> RELEASE_NOTES.md
        echo '```bash' >> RELEASE_NOTES.md
        echo "pip install estiem-eda-toolkit" >> RELEASE_NOTES.md
        echo '```' >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Tools Available" >> RELEASE_NOTES.md
        echo "- I-Chart: Individual control charts" >> RELEASE_NOTES.md
        echo "- Process Capability: Cp/Cpk analysis" >> RELEASE_NOTES.md
        echo "- ANOVA: One-way analysis of variance" >> RELEASE_NOTES.md
        echo "- Pareto Analysis: 80/20 rule identification" >> RELEASE_NOTES.md
        echo "- Probability Plot: Distribution assessment with confidence intervals" >> RELEASE_NOTES.md